{"version":3,"file":"alga.js","sources":["../src/index.js"],"sourcesContent":["import taxRates from './rates.json'\n\nconst _private = new WeakMap()\n\nexport default class Alga {\n  static INVALID_STATUS_NONE = 0\n  static INVALID_STATUS_CAT_I = 1\n  static INVALID_STATUS_CAT_II = 1\n  static INVALID_STATUS_CAT_III = 2\n\n  static PENSION_STATUS_NONE = 0\n  static PENSION_STATUS_BY_AGE = 1\n  static PENSION_STATUS_BY_SERVICE = 2\n\n  static MODE_BRUTTO = 1\n  static MODE_NETTO = 2\n\n  constructor(date = new Date(), opts = {}) {\n    if (!(date instanceof Date)) {\n      throw new Error('Can not recognize date format')\n    }\n\n    const [dateSearch] = date.toISOString().split('T')\n    const taxPeriods = Object.keys(taxRates)\n    const index = _sortedIndex(taxPeriods, dateSearch)\n\n    if (index === 0) {\n      throw new Error('Library does not support dates before 2010-01-01')\n    }\n\n    const period = taxPeriods[index - 1]\n\n    _private.set(this, {\n      rates: taxRates[period],\n      options: _extend(\n        {\n          dependents: 0,\n          pensionStatus: Alga.PENSION_STATUS_NONE,\n          invalidStatus: Alga.INVALID_STATUS_NONE,\n          victimStatus: false,\n          hasTaxBook: true,\n          hasContract: true,\n        },\n        opts\n      ),\n\n      netto: 0,\n      brutto: 0,\n      mode: Alga.MODE_BRUTTO,\n\n      iin: 0,\n      vsaoi: { employee: 0, employer: 0 },\n      taxes: 0,\n      benefits: { dependents: 0, extra: 0 },\n      total: 0,\n      exemptionLimit: 0,\n    })\n  }\n\n  _calc(values = {}) {\n    const rates = this.rates\n    let data = _extend(_private.get(this), values)\n\n    data.benefits.dependents = data.options.hasTaxBook ? _round(data.options.dependents * rates.dependentBenefit) : 0\n\n    data.benefits.extra =\n      data.options.hasTaxBook && data.options.victimStatus\n        ? Math.max(_round(rates.invalidBenefit), rates.victimBenefit)\n        : _round(rates.invalidBenefit)\n\n    if (data.mode === Alga.MODE_NETTO) {\n      const IIN = rates.incomeTaxRate / 100\n      const SOC = rates.socialTaxRate / 100\n      const extraCoefficient = 1 - SOC - IIN + SOC * IIN\n      const benefit = rates.exemptionLimit + data.benefits.dependents + data.benefits.extra\n\n      data.brutto = _round(Math.max(0, data.netto - Math.min(data.netto, benefit) * IIN) / extraCoefficient)\n    }\n\n    data.vsaoi.employer = _round((data.brutto / 100) * rates.employerTaxRate)\n    data.vsaoi.employee = _round((data.brutto / 100) * rates.socialTaxRate)\n\n    data.iin = data.brutto - data.vsaoi.employee - rates.exemptionLimit - data.benefits.dependents - data.benefits.extra\n    data.iin = Math.max(data.iin * rates.incomeTaxRate, 0)\n    data.iin = Math.round(data.iin) / 100\n\n    data.taxes = _round(rates.riskFee + data.iin + data.vsaoi.employer + data.vsaoi.employee)\n    data.total = _round(rates.riskFee + data.brutto + data.vsaoi.employer)\n\n    if (data.mode === Alga.MODE_BRUTTO) {\n      data.netto = data.brutto - data.vsaoi.employee - data.iin\n    }\n\n    if (data.mode === Alga.MODE_NETTO) {\n      data.brutto = _round(data.netto + data.iin + data.vsaoi.employee)\n    }\n\n    _private.set(this, data)\n  }\n\n  get brutto() {\n    return _private.get(this).brutto\n  }\n\n  set brutto(value) {\n    value = parseFloat(value)\n\n    let data = {\n      brutto: _round(value),\n      mode: Alga.MODE_BRUTTO,\n    }\n\n    this._calc(data)\n  }\n\n  get netto() {\n    return _private.get(this).netto\n  }\n\n  set netto(value) {\n    value = parseFloat(value)\n\n    let data = {\n      netto: _round(value),\n      mode: Alga.MODE_NETTO,\n    }\n\n    this._calc(data)\n  }\n\n  get dependents() {\n    return _private.get(this).options.dependents\n  }\n\n  set dependents(value) {\n    value = parseInt(value)\n\n    let data = {\n      options: {\n        dependents: Math.max(0, value),\n      },\n    }\n\n    this._calc(data)\n  }\n\n  get pensionStatus() {\n    return _private.get(this).options.pensionStatus\n  }\n\n  set pensionStatus(value) {\n    if (value in [Alga.PENSION_STATUS_NONE, Alga.PENSION_STATUS_BY_AGE, Alga.PENSION_STATUS_BY_SERVICE]) {\n      let data = {\n        options: {\n          pensionStatus: value,\n        },\n      }\n\n      this._calc(data)\n    }\n  }\n\n  get invalidStatus() {\n    return _private.get(this).options.invalidStatus\n  }\n\n  set invalidStatus(value) {\n    if (\n      value in\n      [Alga.INVALID_STATUS_NONE, Alga.INVALID_STATUS_CAT_I, Alga.INVALID_STATUS_CAT_II, Alga.INVALID_STATUS_CAT_III]\n    ) {\n      let data = {\n        options: {\n          invalidStatus: value,\n        },\n      }\n\n      this._calc(data)\n    }\n  }\n\n  get victimStatus() {\n    return _private.get(this).options.victimStatus\n  }\n\n  set victimStatus(value) {\n    let data = {\n      options: {\n        victimStatus: !!value,\n      },\n    }\n\n    this._calc(data)\n  }\n\n  get hasTaxbook() {\n    return _private.get(this).options.hasTaxBook\n  }\n\n  set hasTaxbook(value) {\n    let data = {\n      options: {\n        hasTaxBook: !!value,\n      },\n    }\n\n    this._calc(data)\n  }\n\n  get hasContract() {\n    return _private.get(this).options.hasContract\n  }\n\n  set hasContract(value) {\n    let data = {\n      options: {\n        hasContract: !!value,\n      },\n    }\n\n    this._calc(data)\n  }\n\n  get total() {\n    return _private.get(this).total\n  }\n\n  get taxes() {\n    return _private.get(this).taxes\n  }\n\n  get iin() {\n    return _private.get(this).iin\n  }\n\n  get vsaoi() {\n    return _private.get(this).vsaoi\n  }\n\n  get benefits() {\n    return _private.get(this).benefits\n  }\n\n  get rates() {\n    let data = _private.get(this)\n\n    return {\n      incomeTaxRate: data.rates.incomeTaxRate,\n      riskFee: data.rates.riskFee,\n      socialTaxRate: data.rates.socialTaxRates[data.options.pensionStatus],\n      employerTaxRate: data.rates.employerTaxRates[data.options.pensionStatus],\n      exemptionLimit:\n        data.options.hasTaxBook && !(data.options.invalidStatus || data.options.pensionStatus)\n          ? data.rates.exemptionLimit\n          : 0,\n      dependentBenefit: data.options.hasTaxBook ? data.rates.dependentBenefit : 0,\n      invalidBenefit: data.rates.invalidBenefit[data.options.invalidStatus],\n      victimBenefit: data.options.victimStatus && data.options.hasTaxBook ? data.rates.victimBenefit : 0,\n    }\n  }\n}\n\nfunction _extend(target, ...sources) {\n  const merge = obj => {\n    for (const prop in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n        if (Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n          target[prop] = _extend(target[prop], obj[prop])\n        } else {\n          target[prop] = obj[prop]\n        }\n      }\n    }\n  }\n\n  for (let i in sources) {\n    merge(sources[i])\n  }\n\n  return target\n}\n\nfunction _convert(amount, currency = 'LVL') {\n  let ratio = 0.702804 // Official LVL to EUR ratio\n  return currency === 'LVL' ? amount / ratio : amount * ratio\n}\n\nfunction _round(num) {\n  return parseFloat(num.toFixed(2))\n}\n\nfunction _sortedIndex(haystack = [], needle) {\n  if (typeof haystack !== 'object') {\n    throw new Error('Haystack must be an Object')\n  }\n\n  let arr = !Array.isArray(haystack) ? Object.keys(haystack) : haystack\n  arr.push(needle)\n  arr.sort()\n\n  return arr.indexOf(needle)\n}\n"],"names":["_private","WeakMap","Alga","constructor","date","opts","Date","Error","toISOString","split","taxPeriods","Object","keys","taxRates","index","haystack","needle","arr","Array","isArray","push","sort","indexOf","_sortedIndex","dateSearch","set","this","rates","_extend","pensionStatus","PENSION_STATUS_NONE","invalidStatus","INVALID_STATUS_NONE","mode","MODE_BRUTTO","vsaoi","benefits","target","merge","obj","const","prop","prototype","hasOwnProperty","call","toString","let","i","sources","_round","num","parseFloat","toFixed","_calc","values","data","get","dependents","options","hasTaxBook","dependentBenefit","extra","victimStatus","Math","max","invalidBenefit","victimBenefit","MODE_NETTO","IIN","incomeTaxRate","SOC","socialTaxRate","extraCoefficient","brutto","netto","min","exemptionLimit","employer","employerTaxRate","employee","iin","round","taxes","riskFee","total","prototypeAccessors","value","parseInt","PENSION_STATUS_BY_AGE","PENSION_STATUS_BY_SERVICE","INVALID_STATUS_CAT_I","INVALID_STATUS_CAT_II","INVALID_STATUS_CAT_III","hasTaxbook","hasContract","socialTaxRates","employerTaxRates"],"mappings":"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"}